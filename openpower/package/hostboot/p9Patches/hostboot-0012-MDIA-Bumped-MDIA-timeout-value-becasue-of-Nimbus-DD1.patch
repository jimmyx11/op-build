From 710f2388ec73baaf710e817677e664070d0bfaab Mon Sep 17 00:00:00 2001
From: Zane Shelley <zshelle@us.ibm.com>
Date: Mon, 30 Jan 2017 14:52:53 -0600
Subject: [PATCH 2/5] MDIA: Bumped MDIA timeout value becasue of Nimbus DD1.0
 workaround

Change-Id: Ic66bdfa666013079d52961aedbf6186574ab0dff
CQ: SW377891
Reviewed-on: http://ralgit01.raleigh.ibm.com/gerrit1/35619
Tested-by: Jenkins Server <pfd-jenkins+hostboot@us.ibm.com>
Tested-by: FSP CI Jenkins <fsp-CI-jenkins+hostboot@us.ibm.com>
Tested-by: Jenkins OP Build CI <op-jenkins+hostboot@us.ibm.com>
Reviewed-by: Brian J. Stegmiller <bjs@us.ibm.com>
Reviewed-by: Benjamin J. Weisenbeck <bweisenb@us.ibm.com>
Reviewed-by: Caleb N. Palmer <cnpalmer@us.ibm.com>
Reviewed-by: Zane C. Shelley <zshelle@us.ibm.com>
---
 src/usr/diag/mdia/mdiasm.C | 23 +++++++++++------------
 src/usr/diag/mdia/mdiasm.H |  9 ++++++---
 2 files changed, 17 insertions(+), 15 deletions(-)

diff --git a/src/usr/diag/mdia/mdiasm.C b/src/usr/diag/mdia/mdiasm.C
index d855d61..9ced930 100644
--- a/src/usr/diag/mdia/mdiasm.C
+++ b/src/usr/diag/mdia/mdiasm.C
@@ -400,8 +400,8 @@ void StateMachine::processCommandTimeout(const MonitorIDs & i_monitorIDs)
                     // Committing an info log to help debug SW timeout
                     if((*wit)->timeoutCnt >= MAINT_CMD_TIMEOUT_LOG)
                     {
-                        MDIA_FAST("sm: committing a SW timed out info log "
-                                  "for %x", get_huid(target));
+                        MDIA_FAST("sm: committing a SW timeout info log "
+                                  "for HUID:0x%08X", get_huid(target));
 
                         /*@
                          * @errortype
@@ -432,9 +432,10 @@ void StateMachine::processCommandTimeout(const MonitorIDs & i_monitorIDs)
                         (*wit)->timeoutCnt++;
                     }
 
-                    MDIA_FAST("sm: work item %d reset SW timed out on: %x, "
-                              "timeoutCnt: %d", *((*wit)->workItem),
-                              get_huid(target), (*wit)->timeoutCnt);
+                    MDIA_FAST("sm: work item %d reset SW timed out on "
+                              "HUID:0x%08X, timeoutCnt: %d",
+                              *((*wit)->workItem), get_huid(target),
+                              (*wit)->timeoutCnt);
                     // register a new timeout monitor
                     uint64_t monitorId =
                         getMonitor().addMonitor(MAINT_CMD_TIMEOUT);
@@ -444,7 +445,7 @@ void StateMachine::processCommandTimeout(const MonitorIDs & i_monitorIDs)
                 }
 
                 // If maint cmd complete bit is not on, time out
-                MDIA_FAST("sm: stopping command: %p", target);
+                MDIA_FAST("sm: stopping command HUID:0x%08X", get_huid(target));
                 //target type is MBA
                 if ( TYPE_MBA == trgtType )
                 {
@@ -492,10 +493,8 @@ void StateMachine::processCommandTimeout(const MonitorIDs & i_monitorIDs)
                 wkflprop = *wit;
 
                 // log a timeout event
-                MDIA_ERR("sm: command %p: %d HW timed out on: %x",
-                        target,
-                        *((*wit)->workItem),
-                        get_huid(target));
+                MDIA_ERR("sm: workItem %d HW timeout on HUID:0x%08X",
+                         *((*wit)->workItem), get_huid(target));
 
                 /*@
                  * @errortype
@@ -728,7 +727,7 @@ bool StateMachine::scheduleWorkItem(WorkFlowProperties & i_wfp)
 
         TargetHandle_t target = getTarget(i_wfp);
 
-        MDIA_FAST("sm: dispatching work item %d for: %p, priority: %d, "
+        MDIA_FAST("sm: dispatching work item %d for: 0x%08x, priority: %d, "
                 "unit: %d", *i_wfp.workItem,
                 get_huid(target),
                 priority,
@@ -784,7 +783,7 @@ bool StateMachine::executeWorkItem(WorkFlowProperties * i_wfp)
 
         uint64_t workItem = *i_wfp->workItem;
 
-        MDIA_FAST("sm: executing work item %d for: %x",
+        MDIA_FAST("sm: executing work item %d for: 0x%08x",
                 workItem, get_huid(getTarget(*i_wfp)));
 
         mutex_unlock(&iv_mutex);
diff --git a/src/usr/diag/mdia/mdiasm.H b/src/usr/diag/mdia/mdiasm.H
index 4c6a7b4..5a304c1 100644
--- a/src/usr/diag/mdia/mdiasm.H
+++ b/src/usr/diag/mdia/mdiasm.H
@@ -5,7 +5,7 @@
 /*                                                                        */
 /* OpenPOWER HostBoot Project                                             */
 /*                                                                        */
-/* Contributors Listed Below - COPYRIGHT 2012,2016                        */
+/* Contributors Listed Below - COPYRIGHT 2012,2017                        */
 /* [+] International Business Machines Corp.                              */
 /*                                                                        */
 /*                                                                        */
@@ -41,8 +41,11 @@
 namespace MDIA
 {
 
-//MBA timeout value - 30 secs
-static const uint64_t MAINT_CMD_TIMEOUT = 30000000000;
+// HW timeout value - 30 secs
+// Nimbus DD1.0 has a workaround that will go over 30 seconds. Will need to bump
+// it up for now. May consider lowering it later, but only if there is a
+// problem.
+static const uint64_t MAINT_CMD_TIMEOUT = 30000000000 * 10;
 
 //Longer MBA timeout to be used when continuous tracing is enabled - 30 min
 static const uint64_t MAINT_CMD_TIMEOUT_LONG = 1800000000000;
-- 
1.8.2.2

